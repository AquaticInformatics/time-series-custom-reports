<?xml version="1.0" encoding="utf-8" standalone="yes"?><root type="PerpetuumSoft.Reporting.DOM.Document" id="1" version="2" Name="MeasurementList" IsTemplate="true" Title="Measurement List" ImportsString="MeasurementListNamespace&#xD;&#xA;ReportPluginFramework.Properties&#xD;&#xA;ReportPluginFramework.Beta&#xD;&#xA;ReportPluginFramework.Beta.ReportData&#xD;&#xA;System.Linq&#xD;&#xA;ReportPluginFramework.Beta.ReportData.TimeSeriesComputedStatistics&#xD;&#xA;ReportPluginFramework.Beta.ReportData.TimeSeriesData&#xD;&#xA;System.Collections.Generic&#xD;&#xA;System.Data&#xD;&#xA;Server.Services.PublishService.ServiceModel.RequestDtos&#xD;&#xA;Server.Services.PublishService.ServiceModel.ResponseDtos&#xD;&#xA;Server.Services.PublishService.ServiceModel.Dtos&#xD;&#xA;Server.Services.PublishService.ServiceModel.Dtos.FieldVisit&#xD;&#xA;Server.Services.PublishService.ServiceModel.Dtos.FieldVisit.Enum&#xD;&#xA;" DocumentGuid="ec2b0784-f519-4ab7-937f-caad9a68f7cd" MetricUnit="Pixel" DoublePass="true" CommonScript="// Common functions, variables and defaults&#xD;&#xA;//&#xD;&#xA;&#xD;&#xA;public string ReportTitle = &quot;&quot;;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;ServiceStack.Logging.ILog Log = ServiceStack.Logging.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);&#xD;&#xA;&#xD;&#xA;public string GetUnitIfDifferent(QuantityWithDisplay quantity, string defaultUnitId)&#xD;&#xA;{&#xD;&#xA;  if (quantity.Numeric.HasValue &amp;&amp; (quantity.Unit != defaultUnitId))&#xD;&#xA;    return quantity.Unit;&#xD;&#xA;  return &quot;&quot;;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public string MakeColumnHeader(string parameterName, string parameterUnitSymbol)&#xD;&#xA;{&#xD;&#xA;  return (string.IsNullOrEmpty(parameterUnitSymbol)) ? &#xD;&#xA;    parameterName : parameterName + &quot; (&quot; + parameterUnitSymbol + &quot;)&quot;;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public string MapVelocityObservationMethod(string velocityObservationType)&#xD;&#xA;{&#xD;&#xA;  switch (velocityObservationType)&#xD;&#xA;  {&#xD;&#xA;    case &quot;OneAtPointFive&quot;:&#xD;&#xA;      return &quot;.5 depth&quot;;&#xD;&#xA;    case &quot;OneAtPointSix&quot;:&#xD;&#xA;      return &quot;.6 depth&quot;;&#xD;&#xA;    case &quot;OneAtPointTwoAndPointEight&quot;:&#xD;&#xA;      return &quot;.2/.8 depth&quot;;&#xD;&#xA;    case &quot;OneAtPointTwoPointSixAndPointEight&quot;:&#xD;&#xA;      return &quot;.2/.6/.8 depth&quot;;&#xD;&#xA;    case &quot;FivePoint&quot;:&#xD;&#xA;      return &quot;5-point&quot;;&#xD;&#xA;    case &quot;SixPoint&quot;:&#xD;&#xA;      return &quot;6-point&quot;;&#xD;&#xA;    case &quot;ElevenPoint&quot;:&#xD;&#xA;      return &quot;11-point&quot;;&#xD;&#xA;    case &quot;Surface&quot;:&#xD;&#xA;      return &quot;Surface velocity&quot;;    &#xD;&#xA;    case &quot;268D&quot;:&#xD;&#xA;      return &quot;.2/.6/.8 depth&quot;;    &#xD;&#xA;    case &quot;28D&quot;:&#xD;&#xA;      return &quot;.2/.8 depth&quot;;    &#xD;&#xA;    case &quot;2D&quot;:&#xD;&#xA;      return &quot;.2 depth&quot;;    &#xD;&#xA;    case &quot;5D&quot;:&#xD;&#xA;      return &quot;.5 depth&quot;;    &#xD;&#xA;    case &quot;6D&quot;:&#xD;&#xA;      return &quot;.6 depth&quot;;    &#xD;&#xA;    case &quot;DINT&quot;:&#xD;&#xA;      return &quot;Depth-integrated float&quot;;    &#xD;&#xA;    case &quot;FIXD&quot;:&#xD;&#xA;      return &quot;Fixed depth&quot;;    &#xD;&#xA;    case &quot;SFLT&quot;:&#xD;&#xA;      return &quot;Surface float&quot;;&#xD;&#xA;    case &quot;SURF&quot;:&#xD;&#xA;      return &quot;Surface velocity&quot;;&#xD;&#xA;    case &quot;ULTA&quot;:&#xD;&#xA;      return &quot;Ultrasonic path&quot;;&#xD;&#xA;    case &quot;Unspecified&quot;:&#xD;&#xA;      return &quot;Unspecified&quot;;&#xD;&#xA;    case &quot;VDCP&quot;:&#xD;&#xA;      return &quot;Integrated-velocity profile&quot;;&#xD;&#xA;    case &quot;VPRF&quot;:&#xD;&#xA;      return &quot;Velocity profile&quot;;&#xD;&#xA;  }&#xD;&#xA;  return velocityObservationType;&#xD;&#xA;}&#xD;&#xA;" ScriptLanguage="CSharp" GridStep="18.75" GenerateScript="if (Engine.IsSecondPass) return;&#xD;&#xA;&#xD;&#xA;ServiceStack.Logging.ILog Log = ServiceStack.Logging.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);&#xD;&#xA;&#xD;&#xA;Log.Debug(&quot;Begin Document GenerateScript !!!!!!!!!!!!!!**********************************************************&quot;);&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;  System.Data.DataSet dataSet = (System.Data.DataSet) Engine.Objects[&quot;ReportTables&quot;];&#xD;&#xA;  RunFileReportRequest runReportRequest = (RunFileReportRequest) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;RunReportRequest&quot;];&#xD;&#xA;  IPublishGateway publish = runReportRequest.Publish;&#xD;&#xA;   &#xD;&#xA;  ReportTitle = (string) dataSet.Tables[&quot;ReportSettings&quot;].Rows[0][&quot;ReportTitle&quot;];&#xD;&#xA;  string locationIdentifier = (string) dataSet.Tables[&quot;LocationInput&quot;].Rows[0][&quot;Identifier&quot;];&#xD;&#xA;  &#xD;&#xA;  string dllName = (string) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;DllName&quot;];&#xD;&#xA;  Log.DebugFormat(&quot;{0} - Document GenerateScript input location = {1}&quot;, dllName, locationIdentifier);&#xD;&#xA;  &#xD;&#xA;  Common common = (Common) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;CommonLibrary&quot;];&#xD;&#xA;  ///////////////////////////////////////////////////////////////&#xD;&#xA;  DateTimeOffsetInterval periodSelected = (DateTimeOffsetInterval) GetData(&quot;ReportTables.ReportData.PeriodSelectedAdjustedForReport&quot;);&#xD;&#xA;  TimeSpan tsOffset = (TimeSpan) GetData(&quot;ReportTables.InputLocation.UtcOffset&quot;);&#xD;&#xA;  &#xD;&#xA;  string locIdentifier = (string) GetData(&quot;ReportTables.InputLocation.LocationIdentifier&quot;);&#xD;&#xA;  &#xD;&#xA;  string inputOutputParameters = common.GetParameterString(&quot;InputOutputParameters&quot;, &quot;&quot;);&#xD;&#xA;  string ratingModelLabel = common.GetParameterString(&quot;RatingModelLabel&quot;, &quot;&quot;);&#xD;&#xA;  string sortOrder = common.GetParameterString(&quot;SortOrder&quot;, &quot;Reverse Chronological on Measurement Time&quot;);&#xD;&#xA;  &#xD;&#xA;  string waterTempParameterName = common.GetParameterString(&quot;WaterTempParameter&quot;, &quot;Water Temp&quot;);&#xD;&#xA;  string dateFormat = common.GetParameterString(&quot;DateFormat&quot;, &quot;MM/dd/yyyy&quot;);&#xD;&#xA;  string timeFormat = common.GetParameterString(&quot;TimeFormat&quot;, &quot;HH:mm:ss&quot;);&#xD;&#xA;  &#xD;&#xA;  string inputParameterRoundingSpec = &quot;DEC(3)&quot;;&#xD;&#xA;  string outputParameterRoundingSpec = &quot;SIG(3)&quot;;&#xD;&#xA;  string percentRoundingSpec = &quot;DEC(2)&quot;;&#xD;&#xA;  string missingStr = &quot;***&quot;;&#xD;&#xA;  &#xD;&#xA;  string ratingModelIdentifier = string.Format(&quot;{0}.{1}@{2}&quot;, inputOutputParameters, ratingModelLabel, locIdentifier);&#xD;&#xA;   &#xD;&#xA;  if (dataSet.Tables.Contains(&quot;DischargeMeasurements&quot;)) dataSet.Tables.Remove(&quot;DischargeMeasurements&quot;);&#xD;&#xA;  &#xD;&#xA;  DataTable table = dataSet.Tables.Add(&quot;DischargeMeasurements&quot;);&#xD;&#xA;  table.Columns.Add(&quot;MeasurementId&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;Date&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;Time&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;DateTime&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;MeanGageHeight&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;MeanGageHeightUnit&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;Discharge&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;DischargeUnit&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;Remarks&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;Party&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;Method&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;RatingCurveId&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;Shift&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;RError&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;RErrorPercent&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;TDiffer&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;TDifferPercent&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;WaterTemp&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;WaterTempUnit&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;Area&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;AreaUnit&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;Width&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;WidthUnit&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;Velocity&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;VelocityUnit&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;NumberOfSections&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;QualitativeGrade&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;DurationInHours&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;GageHeightChange&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;DefinedShift&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;PercentDiff&quot;, typeof(string));&#xD;&#xA;  table.Columns.Add(&quot;NumberOfImages&quot;, typeof(string));&#xD;&#xA;  &#xD;&#xA;  if (dataSet.Tables.Contains(&quot;ColumnHeaders&quot;)) dataSet.Tables.Remove(&quot;ColumnHeaders&quot;);&#xD;&#xA;  &#xD;&#xA;  DataTable columnHeaders = dataSet.Tables.Add(&quot;ColumnHeaders&quot;);&#xD;&#xA;  columnHeaders.Columns.Add(&quot;MeasurementId&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;DateTime&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;Party&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;Width&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;Area&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;Velocity&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;Stage&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;Discharge&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;Method&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;NumberOfSections&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;GageHeightChange&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;DurationInHours&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;WaterTemp&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;QualitativeGrade&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;RatingCurveId&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;PercentDiff&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;DefinedShift&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;DischargeRemarks&quot;, typeof(string));&#xD;&#xA;  columnHeaders.Columns.Add(&quot;NumberOfImages&quot;, typeof(string));&#xD;&#xA;  &#xD;&#xA;  DataRow columnHeadersRow = columnHeaders.NewRow();&#xD;&#xA;  columnHeaders.Rows.Add(columnHeadersRow);&#xD;&#xA;  &#xD;&#xA;  columnHeadersRow[&quot;MeasurementId&quot;] = &quot;Id&quot;;&#xD;&#xA;  columnHeadersRow[&quot;DateTime&quot;] = &quot;Date&quot; + Environment.NewLine + &quot;Time&quot;;&#xD;&#xA;  columnHeadersRow[&quot;Party&quot;] = &quot;Party&quot;;&#xD;&#xA;  columnHeadersRow[&quot;Width&quot;] = &quot;Width&quot;;&#xD;&#xA;  columnHeadersRow[&quot;Area&quot;] = &quot;Area&quot;;&#xD;&#xA;  columnHeadersRow[&quot;Velocity&quot;] = &quot;Mean Velocity&quot;;&#xD;&#xA;  columnHeadersRow[&quot;Stage&quot;] = &quot;Stage&quot;;&#xD;&#xA;  columnHeadersRow[&quot;Discharge&quot;] = &quot;Discharge&quot;;&#xD;&#xA;  columnHeadersRow[&quot;Method&quot;] = &quot;Method&quot;;&#xD;&#xA;  columnHeadersRow[&quot;NumberOfSections&quot;] = &quot;No. Sect.&quot;;&#xD;&#xA;  columnHeadersRow[&quot;GageHeightChange&quot;] = &quot;Stage&quot; + Environment.NewLine + &quot;Change&quot;;&#xD;&#xA;  columnHeadersRow[&quot;DurationInHours&quot;] = &quot;Time&quot; + Environment.NewLine + &quot;(Hr.)&quot;;&#xD;&#xA;  columnHeadersRow[&quot;WaterTemp&quot;] = &quot;Water&quot; + Environment.NewLine + &quot;Temp&quot;;&#xD;&#xA;  columnHeadersRow[&quot;QualitativeGrade&quot;] = &quot;RTD&quot;;&#xD;&#xA;  columnHeadersRow[&quot;RatingCurveId&quot;] = &quot;RC Id&quot;;&#xD;&#xA;  columnHeadersRow[&quot;PercentDiff&quot;] = &quot;% Diff&quot;;&#xD;&#xA;  columnHeadersRow[&quot;DefinedShift&quot;] = &quot;Shift&quot;;&#xD;&#xA;  columnHeadersRow[&quot;DischargeRemarks&quot;] = &quot;Discharge Remarks&quot;;&#xD;&#xA;  columnHeadersRow[&quot;NumberOfImages&quot;] = &quot;No. Imag.&quot;;&#xD;&#xA;&#xD;&#xA;  if (dataSet.Tables.Contains(&quot;RatingModel&quot;)) dataSet.Tables.Remove(&quot;RatingModel&quot;);&#xD;&#xA;  DataTable ratingModel = dataSet.Tables.Add(&quot;RatingModel&quot;);&#xD;&#xA;  &#xD;&#xA;  ratingModel.Columns.Add(&quot;Identifier&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;InputParameter&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;InputUnitId&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;InputUnitSymbol&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;OutputParameter&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;OutputUnitId&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;OutputUnitSymbol&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;Description&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;Comment&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;TimeRange&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;RatingModelInfo&quot;, typeof(string));&#xD;&#xA;  &#xD;&#xA;  DataRow ratingModelRow = ratingModel.NewRow();&#xD;&#xA;  ratingModelRow[&quot;Identifier&quot;] = ratingModelIdentifier;&#xD;&#xA;  ratingModel.Rows.Add(ratingModelRow);&#xD;&#xA;    &#xD;&#xA;  RatingModelDescriptionListServiceRequest ratingModelDescriptionListRequest = new RatingModelDescriptionListServiceRequest();&#xD;&#xA;  ratingModelDescriptionListRequest.LocationIdentifier = locIdentifier;&#xD;&#xA;  &#xD;&#xA;  RatingModelDescriptionListServiceResponse ratingModelDescriptionListResponse = publish.Get(ratingModelDescriptionListRequest);&#xD;&#xA;  &#xD;&#xA;  RatingModelDescription ratingModelDescription = null;&#xD;&#xA;  foreach (RatingModelDescription rmDesc in ratingModelDescriptionListResponse.RatingModelDescriptions)&#xD;&#xA;  {&#xD;&#xA;    if (rmDesc.Identifier == ratingModelIdentifier)&#xD;&#xA;    {&#xD;&#xA;      ratingModelDescription = rmDesc;&#xD;&#xA;      break;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  string StageColumnHeaderParameter = &quot;&quot;;&#xD;&#xA;  string StageColumnHeaderUnitSymbol = &quot;&quot;;&#xD;&#xA;&#xD;&#xA;  string DischargeColumnHeaderParameter = &quot;&quot;;&#xD;&#xA;  string DischargeColumnHeaderUnitSymbol = &quot;&quot;;&#xD;&#xA;  string StageUnitId = &quot;&quot;;&#xD;&#xA;  string DischargeUnitId = &quot;&quot;;&#xD;&#xA;  &#xD;&#xA;  string WidthUnitId = &quot;&quot;;&#xD;&#xA;  string AreaUnitId = &quot;&quot;;&#xD;&#xA;  string VelocityUnitId = &quot;&quot;;&#xD;&#xA;  string WaterTempUnitId = &quot;&quot;;&#xD;&#xA;&#xD;&#xA;  if (ratingModelDescription == null)&#xD;&#xA;  {&#xD;&#xA;    if (string.IsNullOrEmpty(ratingModelLabel) &amp;&amp; string.IsNullOrEmpty(inputOutputParameters))&#xD;&#xA;      ratingModelRow[&quot;RatingModelInfo&quot;] = &quot;Rating Model unspecified&quot;;&#xD;&#xA;    else&#xD;&#xA;      ratingModelRow[&quot;RatingModelInfo&quot;] = string.Format(&#xD;&#xA;        &quot;No Rating Model found with parameters = '{0}' and label = '{1}' in Location = {2}, {3}&quot;,&#xD;&#xA;        inputOutputParameters, ratingModelLabel, locIdentifier, GetData(&quot;ReportTables.InputLocation.LocationName&quot;));&#xD;&#xA;  }&#xD;&#xA;  else&#xD;&#xA;  {&#xD;&#xA;   &#xD;&#xA;    string inputParameterDisplayId = ratingModelDescription.InputParameter;&#xD;&#xA;    string inputUnitId = ratingModelDescription.InputUnit;&#xD;&#xA;    string outputParameterDisplayId = ratingModelDescription.OutputParameter;&#xD;&#xA;    string outputUnitId = ratingModelDescription.OutputUnit;&#xD;&#xA;    string rmDescription = ratingModelDescription.Description;&#xD;&#xA;    &#xD;&#xA;    inputParameterRoundingSpec = common.GetParameterRoundingSpec(inputParameterDisplayId);&#xD;&#xA;    outputParameterRoundingSpec = common.GetParameterRoundingSpec(outputParameterDisplayId);&#xD;&#xA;    &#xD;&#xA;    StageColumnHeaderParameter = inputParameterDisplayId;&#xD;&#xA;    StageColumnHeaderUnitSymbol = common.GetUnitSymbol(inputUnitId);&#xD;&#xA;    StageUnitId = inputUnitId;&#xD;&#xA;    &#xD;&#xA;    DischargeColumnHeaderParameter = outputParameterDisplayId;&#xD;&#xA;    DischargeColumnHeaderUnitSymbol = common.GetUnitSymbol(outputUnitId);&#xD;&#xA;    DischargeUnitId = outputUnitId;&#xD;&#xA;      &#xD;&#xA;    ratingModelRow[&quot;InputParameter&quot;] = inputParameterDisplayId;&#xD;&#xA;    ratingModelRow[&quot;InputUnitId&quot;] = inputUnitId;&#xD;&#xA;    ratingModelRow[&quot;InputUnitSymbol&quot;] = common.GetUnitSymbol(inputUnitId);&#xD;&#xA;    ratingModelRow[&quot;OutputParameter&quot;] = outputParameterDisplayId;&#xD;&#xA;    ratingModelRow[&quot;OutputUnitId&quot;] = outputUnitId;&#xD;&#xA;    ratingModelRow[&quot;OutputUnitSymbol&quot;] = common.GetUnitSymbol(outputUnitId);&#xD;&#xA;  &#xD;&#xA;    ratingModelRow[&quot;Description&quot;] = rmDescription;&#xD;&#xA;    ratingModelRow[&quot;Comment&quot;] = ratingModelDescription.Comment;&#xD;&#xA;&#xD;&#xA;    ratingModelRow[&quot;RatingModelInfo&quot;] = string.Format(&#xD;&#xA;      &quot;No Rating Curves found for RatingModelIdentifier = '{0}' in Location = {1}&quot;,&#xD;&#xA;      ratingModelIdentifier, GetData(&quot;ReportTables.InputLocation.LocationName&quot;));  &#xD;&#xA;  &#xD;&#xA;    RatingCurveListServiceRequest ratingCurveListRequest = new RatingCurveListServiceRequest();&#xD;&#xA;    ratingCurveListRequest.RatingModelIdentifier = ratingModelIdentifier;&#xD;&#xA;    &#xD;&#xA;    try&#xD;&#xA;    {&#xD;&#xA;      RatingCurveListServiceResponse ratingCurveResponse = publish.Get(ratingCurveListRequest);&#xD;&#xA;      &#xD;&#xA;      string outputUnitSymbol = common.GetUnitSymbol(outputUnitId);&#xD;&#xA;    &#xD;&#xA;      ratingModelRow[&quot;RatingModelInfo&quot;] = string.Format(&#xD;&#xA;        &quot;Rating Model: {0}, {1}, {2} ({3}) - {4} ({5}), Number of curves: {6}&quot;,&#xD;&#xA;        ratingModelIdentifier, &#xD;&#xA;        GetData(&quot;ReportTables.InputLocation.LocationName&quot;),&#xD;&#xA;        inputParameterDisplayId, common.GetUnitSymbol(inputUnitId),&#xD;&#xA;        outputParameterDisplayId, outputUnitSymbol,&#xD;&#xA;        ratingCurveResponse.RatingCurves.Count);&#xD;&#xA;    }&#xD;&#xA;    catch {}&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  if (string.IsNullOrEmpty(StageColumnHeaderParameter)) StageColumnHeaderParameter = &quot;Stage&quot;;&#xD;&#xA;  if (string.IsNullOrEmpty(DischargeColumnHeaderParameter)) DischargeColumnHeaderParameter = &quot;Discharge&quot;;&#xD;&#xA;  &#xD;&#xA;  FieldVisitDescriptionListServiceRequest request = new FieldVisitDescriptionListServiceRequest();&#xD;&#xA;  request.LocationIdentifier = locIdentifier;&#xD;&#xA;  request.QueryFrom = periodSelected.Start;&#xD;&#xA;  request.QueryTo = periodSelected.End;&#xD;&#xA;  &#xD;&#xA;  FieldVisitDescriptionListServiceResponse response = publish.Get(request);&#xD;&#xA;  List&lt;FieldVisitDescription&gt; visits = response.FieldVisitDescriptions;&#xD;&#xA;  &#xD;&#xA;  if (sortOrder != &quot;Reverse Chronological on Measurement Time&quot;)&#xD;&#xA;    visits.Sort((x, y) =&gt; x.StartTime.Value.CompareTo(y.StartTime.Value));&#xD;&#xA;  else&#xD;&#xA;    visits.Sort((x, y) =&gt; y.StartTime.Value.CompareTo(x.StartTime.Value));&#xD;&#xA;  &#xD;&#xA;  foreach (FieldVisitDescription f in visits)&#xD;&#xA;  {&#xD;&#xA;    &#xD;&#xA;    FieldVisitDataServiceRequest fvDataRequest = new FieldVisitDataServiceRequest();&#xD;&#xA;    fvDataRequest.ApplyRounding = true;&#xD;&#xA;    fvDataRequest.FieldVisitIdentifier = f.Identifier;&#xD;&#xA;    FieldVisitDataServiceResponse fvResponse = publish.Get(fvDataRequest);&#xD;&#xA;    &#xD;&#xA;    int numberOfImages = 0;&#xD;&#xA;    if ((fvResponse.Attachments != null) &amp;&amp; (fvResponse.Attachments.Count &gt; 0))&#xD;&#xA;    {&#xD;&#xA;      foreach (Attachment attachment in fvResponse.Attachments)&#xD;&#xA;        if (attachment.AttachmentType == AttachmentType.Image) numberOfImages++;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    string waterTemp = &quot;&quot;;&#xD;&#xA;    string waterTempUnit = &quot;&quot;;&#xD;&#xA;    &#xD;&#xA;    if ((fvResponse.InspectionActivity != null) &amp;&amp; (fvResponse.InspectionActivity.Readings.Count &gt; 0))&#xD;&#xA;    {&#xD;&#xA;      foreach (Reading reading in fvResponse.InspectionActivity.Readings)&#xD;&#xA;      {&#xD;&#xA;        if (!reading.IsValid) continue;&#xD;&#xA;        &#xD;&#xA;        if (reading.Parameter == waterTempParameterName)&#xD;&#xA;        {&#xD;&#xA;          if (string.IsNullOrEmpty(WaterTempUnitId)) WaterTempUnitId = reading.Unit;&#xD;&#xA;&#xD;&#xA;          waterTemp = reading.Value.Display;&#xD;&#xA;          &#xD;&#xA;          if (!string.IsNullOrEmpty(waterTemp) &amp;&amp; reading.Unit != WaterTempUnitId)&#xD;&#xA;            waterTempUnit = common.GetUnitSymbol(reading.Unit);         &#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    var activities = fvResponse.DischargeActivities;&#xD;&#xA;    if (activities == null) continue;&#xD;&#xA;    &#xD;&#xA;    List&lt;DischargeActivity&gt; dischargeActivities = new List&lt;DischargeActivity&gt;();&#xD;&#xA;    foreach (DischargeActivity activity in activities)&#xD;&#xA;      if (activity.DischargeSummary != null) dischargeActivities.Add(activity);&#xD;&#xA;&#xD;&#xA;    if (sortOrder != &quot;Reverse Chronological on Measurement Time&quot;)&#xD;&#xA;      dischargeActivities.Sort((x, y) =&gt; x.DischargeSummary.MeasurementTime.CompareTo(y.DischargeSummary.MeasurementTime));&#xD;&#xA;    else&#xD;&#xA;      dischargeActivities.Sort((x, y) =&gt; y.DischargeSummary.MeasurementTime.CompareTo(x.DischargeSummary.MeasurementTime));&#xD;&#xA;    &#xD;&#xA;    foreach (DischargeActivity activity in dischargeActivities)&#xD;&#xA;    {&#xD;&#xA;      DischargeSummary summary = activity.DischargeSummary;&#xD;&#xA;      &#xD;&#xA;      if (string.IsNullOrEmpty(StageUnitId)) StageUnitId = summary.MeanGageHeight.Unit;&#xD;&#xA;      if (string.IsNullOrEmpty(DischargeUnitId)) DischargeUnitId = summary.Discharge.Unit;&#xD;&#xA;      &#xD;&#xA;      if (string.IsNullOrEmpty(StageColumnHeaderUnitSymbol)) StageColumnHeaderUnitSymbol = common.GetUnitSymbol(StageUnitId);&#xD;&#xA;      if (string.IsNullOrEmpty(DischargeColumnHeaderUnitSymbol)) DischargeColumnHeaderUnitSymbol = common.GetUnitSymbol(DischargeUnitId);&#xD;&#xA;      &#xD;&#xA;      DateTimeOffset dt = summary.MeasurementTime;&#xD;&#xA;      &#xD;&#xA;      DataRow row = table.NewRow();&#xD;&#xA;      row[&quot;MeasurementId&quot;] = summary.MeasurementId;&#xD;&#xA;      row[&quot;Date&quot;] = summary.MeasurementTime.ToString(dateFormat);&#xD;&#xA;      row[&quot;Time&quot;] = summary.MeasurementTime.ToString(timeFormat);&#xD;&#xA;      row[&quot;DateTime&quot;] = summary.MeasurementTime.ToString(dateFormat) + Environment.NewLine + summary.MeasurementTime.ToString(timeFormat);&#xD;&#xA;      row[&quot;MeanGageHeight&quot;] = summary.MeanGageHeight.Display;&#xD;&#xA;      row[&quot;MeanGageHeightUnit&quot;] = GetUnitIfDifferent(summary.MeanGageHeight, StageUnitId);&#xD;&#xA;      row[&quot;Discharge&quot;] = summary.Discharge.Display;&#xD;&#xA;      row[&quot;DischargeUnit&quot;] = GetUnitIfDifferent(summary.Discharge, DischargeUnitId);&#xD;&#xA;      row[&quot;Remarks&quot;] = summary.Comments;&#xD;&#xA;      row[&quot;Party&quot;] = summary.Party;&#xD;&#xA;      row[&quot;NumberOfImages&quot;] = numberOfImages.ToString();&#xD;&#xA;      &#xD;&#xA;      string qualitativeGrade = (summary.DischargeUncertainty.ActiveUncertaintyType == UncertaintyType.Qualitative) ?&#xD;&#xA;        summary.DischargeUncertainty.QualitativeUncertainty.ToString() : &quot;&quot;;&#xD;&#xA;      row[&quot;QualitativeGrade&quot;] = (qualitativeGrade.Length &gt; 0) ? qualitativeGrade.Substring(0, 1) : &quot;&quot;;&#xD;&#xA;          &#xD;&#xA;      row[&quot;DurationInHours&quot;] = summary.DurationInHours.Display;&#xD;&#xA;      row[&quot;GageHeightChange&quot;] = summary.DifferenceDuringVisit.Display;&#xD;&#xA;      if ((activity.PointVelocityDischargeActivities != null) &amp;&amp; (activity.PointVelocityDischargeActivities.Count &gt; 0))&#xD;&#xA;      {&#xD;&#xA;        PointVelocityDischargeActivity pointVelocityDischargeActivity = activity.PointVelocityDischargeActivities[0];&#xD;&#xA;        &#xD;&#xA;        if (string.IsNullOrEmpty(AreaUnitId)) AreaUnitId = pointVelocityDischargeActivity.Area.Unit;&#xD;&#xA;        if (string.IsNullOrEmpty(WidthUnitId)) WidthUnitId = pointVelocityDischargeActivity.Width.Unit;&#xD;&#xA;        if (string.IsNullOrEmpty(VelocityUnitId)) VelocityUnitId = pointVelocityDischargeActivity.VelocityAverage.Unit;&#xD;&#xA;&#xD;&#xA;        row[&quot;Area&quot;] = pointVelocityDischargeActivity.Area.Display;&#xD;&#xA;        row[&quot;AreaUnit&quot;] = GetUnitIfDifferent(pointVelocityDischargeActivity.Area, AreaUnitId);&#xD;&#xA;        row[&quot;Width&quot;] = pointVelocityDischargeActivity.Width.Display;&#xD;&#xA;        row[&quot;WidthUnit&quot;] = GetUnitIfDifferent(pointVelocityDischargeActivity.Width, WidthUnitId);&#xD;&#xA;        row[&quot;Velocity&quot;] = pointVelocityDischargeActivity.VelocityAverage.Display;&#xD;&#xA;        row[&quot;VelocityUnit&quot;] = GetUnitIfDifferent(pointVelocityDischargeActivity.VelocityAverage, VelocityUnitId);       &#xD;&#xA;        row[&quot;NumberOfSections&quot;] = pointVelocityDischargeActivity.NumberOfPanels.HasValue ? pointVelocityDischargeActivity.NumberOfPanels.Value.ToString() : &quot;&quot;;&#xD;&#xA;        row[&quot;Method&quot;] = MapVelocityObservationMethod(pointVelocityDischargeActivity.VelocityObservationMethod);&#xD;&#xA;        &#xD;&#xA;      }&#xD;&#xA;      &#xD;&#xA;      row[&quot;WaterTemp&quot;] = waterTemp;&#xD;&#xA;      row[&quot;WaterTempUnit&quot;] = waterTempUnit;&#xD;&#xA;  &#xD;&#xA;      table.Rows.Add(row);&#xD;&#xA;      &#xD;&#xA;      string ratingCurveId = &quot;&quot;;&#xD;&#xA;      try&#xD;&#xA;      {&#xD;&#xA;        RatingCurveListServiceRequest curveRequest = new RatingCurveListServiceRequest();&#xD;&#xA;        curveRequest.RatingModelIdentifier = ratingModelDescription.Identifier;&#xD;&#xA;        curveRequest.QueryFrom = summary.MeasurementTime;&#xD;&#xA;        curveRequest.QueryTo = summary.MeasurementTime;&#xD;&#xA;          &#xD;&#xA;        RatingCurveListServiceResponse curveResponse = publish.Get(curveRequest);&#xD;&#xA;        if (curveResponse.RatingCurves.Count &gt; 0)&#xD;&#xA;          ratingCurveId = curveResponse.RatingCurves[0].Id;&#xD;&#xA;      }&#xD;&#xA;      catch {}  &#xD;&#xA;      &#xD;&#xA;      bool ratingCurveInEffectAtMeasurementTime = !string.IsNullOrEmpty(ratingCurveId);&#xD;&#xA;          &#xD;&#xA;      if (ratingCurveInEffectAtMeasurementTime) row[&quot;RatingCurveId&quot;] = ratingCurveId;&#xD;&#xA;      &#xD;&#xA;      try&#xD;&#xA;      {&#xD;&#xA;        if ((ratingModelDescription != null) &amp;&amp; &#xD;&#xA;          ratingCurveInEffectAtMeasurementTime &amp;&amp;&#xD;&#xA;          summary.MeanGageHeight.Numeric.HasValue &amp;&amp; &#xD;&#xA;          summary.Discharge.Numeric.HasValue &amp;&amp;&#xD;&#xA;          summary.Discharge.Unit == ratingModelDescription.OutputUnit &amp;&amp;&#xD;&#xA;          summary.MeanGageHeight.Unit == ratingModelDescription.InputUnit)&#xD;&#xA;        {&#xD;&#xA;          &#xD;&#xA;          RatingModelInputValuesServiceRequest inputValuesRequest = new RatingModelInputValuesServiceRequest();&#xD;&#xA;          inputValuesRequest.RatingModelIdentifier = ratingModelDescription.Identifier;&#xD;&#xA;          inputValuesRequest.OutputValues = new List&lt;double&gt; {summary.Discharge.Numeric.Value};&#xD;&#xA;          inputValuesRequest.EffectiveTime = summary.MeasurementTime;&#xD;&#xA;          RatingModelInputValuesServiceResponse inputValuesResponse = publish.Get(inputValuesRequest);&#xD;&#xA;          List&lt;double?&gt; inputValues = inputValuesResponse.InputValues;&#xD;&#xA;          if ((inputValues.Count &gt; 0) &amp;&amp; (inputValues[0] != null))&#xD;&#xA;          {&#xD;&#xA;            double stageDeviation = ((double) inputValues[0]) - summary.MeanGageHeight.Numeric.Value;&#xD;&#xA;            row[&quot;Shift&quot;] = common.GetFormattedDouble(stageDeviation, inputParameterRoundingSpec, missingStr);&#xD;&#xA;          }&#xD;&#xA;        &#xD;&#xA;          RatingModelOutputValuesServiceRequest outputValuesRequest = new RatingModelOutputValuesServiceRequest();&#xD;&#xA;          outputValuesRequest.RatingModelIdentifier = ratingModelDescription.Identifier;&#xD;&#xA;          outputValuesRequest.InputValues = new List&lt;double&gt; {summary.MeanGageHeight.Numeric.Value};&#xD;&#xA;          outputValuesRequest.ApplyShifts = false;&#xD;&#xA;          outputValuesRequest.EffectiveTime = summary.MeasurementTime;&#xD;&#xA;          RatingModelOutputValuesServiceResponse outputValuesResponse = publish.Get(outputValuesRequest);&#xD;&#xA;          List&lt;double?&gt; outputValues = outputValuesResponse.OutputValues;&#xD;&#xA;          if ((outputValues.Count &gt; 0) &amp;&amp; (outputValues[0] != null))&#xD;&#xA;          {&#xD;&#xA;            double predictedDischarge = (double) outputValues[0];&#xD;&#xA;            double dischargeDeviation = summary.Discharge.Numeric.Value - predictedDischarge;&#xD;&#xA;            double dischargeDeviationPercent = (predictedDischarge != 0.0) ? 100 * dischargeDeviation / predictedDischarge : 0.0;&#xD;&#xA;            row[&quot;RError&quot;] = common.GetFormattedDouble(dischargeDeviation, outputParameterRoundingSpec, missingStr);&#xD;&#xA;            row[&quot;RErrorPercent&quot;] = common.GetFormattedDouble(dischargeDeviationPercent, percentRoundingSpec, missingStr);&#xD;&#xA;          }&#xD;&#xA;        &#xD;&#xA;          outputValuesRequest.ApplyShifts = true;&#xD;&#xA;&#xD;&#xA;          outputValuesResponse = publish.Get(outputValuesRequest);&#xD;&#xA;          outputValues = outputValuesResponse.OutputValues;&#xD;&#xA;          if ((outputValues.Count &gt; 0) &amp;&amp; (outputValues[0] != null))&#xD;&#xA;          {&#xD;&#xA;            double predictedDischarge = (double) outputValues[0];&#xD;&#xA;            double dischargeDeviation = summary.Discharge.Numeric.Value - predictedDischarge;&#xD;&#xA;            double dischargeDeviationPercent = (predictedDischarge != 0.0) ? 100 * dischargeDeviation / predictedDischarge : 0.0;&#xD;&#xA;            row[&quot;TDiffer&quot;] = common.GetFormattedDouble(dischargeDeviation, outputParameterRoundingSpec, missingStr);&#xD;&#xA;            row[&quot;TDifferPercent&quot;] = common.GetFormattedDouble(dischargeDeviationPercent, percentRoundingSpec, missingStr);         &#xD;&#xA;          }&#xD;&#xA;          &#xD;&#xA;          row[&quot;PercentDiff&quot;] = string.Format(&quot;{0}{1}{2}&quot;, row[&quot;TDifferPercent&quot;], Environment.NewLine, row[&quot;RErrorPercent&quot;]);&#xD;&#xA;          &#xD;&#xA;          RatingModelEffectiveShiftsByStageValuesServiceRequest definedShiftRequest = new RatingModelEffectiveShiftsByStageValuesServiceRequest();&#xD;&#xA;          definedShiftRequest.RatingModelIdentifier = ratingModelDescription.Identifier;&#xD;&#xA;          definedShiftRequest.MeasurementTime = summary.MeasurementTime;&#xD;&#xA;          definedShiftRequest.StageValues = new List&lt;double&gt; {summary.MeanGageHeight.Numeric.Value};&#xD;&#xA;          &#xD;&#xA;          RatingModelEffectiveShiftsByStageValuesServiceResponse definedShiftResponse = publish.Get(definedShiftRequest);&#xD;&#xA;          &#xD;&#xA;          if (definedShiftResponse.EffectiveShiftValues.Count &gt; 0 &amp;&amp; definedShiftResponse.EffectiveShiftValues[0].HasValue)&#xD;&#xA;          {&#xD;&#xA;            row[&quot;DefinedShift&quot;] = common.GetFormattedDouble(definedShiftResponse.EffectiveShiftValues[0].Value, &#xD;&#xA;              inputParameterRoundingSpec, missingStr);&#xD;&#xA;          }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;      }&#xD;&#xA;      catch (Exception ex)&#xD;&#xA;      {&#xD;&#xA;        Log.Error(&quot;Exception caught and skipped over during Rating Shift Analysis: &quot;, ex);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }  &#xD;&#xA;         &#xD;&#xA;  columnHeadersRow[&quot;Width&quot;] = MakeColumnHeader(&quot;Width&quot;, common.GetUnitSymbol(WidthUnitId));&#xD;&#xA;  columnHeadersRow[&quot;Area&quot;] = MakeColumnHeader(&quot;Area&quot;, common.GetUnitSymbol(AreaUnitId));&#xD;&#xA;  columnHeadersRow[&quot;Velocity&quot;] = MakeColumnHeader(&quot;Mean Velocity&quot;, common.GetUnitSymbol(VelocityUnitId));&#xD;&#xA;  columnHeadersRow[&quot;WaterTemp&quot;] = MakeColumnHeader(&quot;Water Temp&quot;, common.GetUnitSymbol(WaterTempUnitId));&#xD;&#xA;  columnHeadersRow[&quot;Stage&quot;] = MakeColumnHeader(StageColumnHeaderParameter, StageColumnHeaderUnitSymbol);&#xD;&#xA;  columnHeadersRow[&quot;Discharge&quot;] = MakeColumnHeader(DischargeColumnHeaderParameter, DischargeColumnHeaderUnitSymbol);&#xD;&#xA; &#xD;&#xA;  Log.Debug(&quot;End Document GenerateScript !!!!!!!!!!!!!!**********************************************************&quot;);&#xD;&#xA;}&#xD;&#xA;catch (Exception exp)&#xD;&#xA;{&#xD;&#xA;  System.Data.DataSet dataSet = (System.Data.DataSet) Engine.Objects[&quot;ReportTables&quot;];&#xD;&#xA;  string dllName = (string) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;DllName&quot;];&#xD;&#xA;  Log.Error(&quot;Document GenerateScript - &quot; + dllName, exp);&#xD;&#xA;  Log.Info((string) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;ReportInputInformation&quot;]);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;"><Parameters type="PerpetuumSoft.Reporting.DOM.ParameterCollection" id="2" /><PageContent type="PerpetuumSoft.Reporting.DOM.Wrappers.ContentParametersDictionary" id="3" /><Pages type="PerpetuumSoft.Reporting.DOM.PageCollection" id="4"><Item type="PerpetuumSoft.Reporting.DOM.Page" id="5" Margins="75; 75; 150; 150" Size="3300;2550" StyleName="Normal" Name="page1" Location="0;0" PaperKind="Letter" Orientation="Landscape"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="6" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="7"><Item type="PerpetuumSoft.Reporting.DOM.PageHeader" id="8" StyleName="PageHeader" Location="0;75" Name="pageHeader" Size="3300;600"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="9" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="10"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="11" Location="112.5;0" Size="3037.5;112.5" Name="textBoxPageHeader1" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="12" Color="33, 64, 154" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="13"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="14" Expression="GetData(&quot;ReportTables.ReportData.PageHeader1&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="15" value="Aquatic Informatics Data Management Software" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="16" Size="12" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="17" Location="112.5;75" Size="3037.5;75" Name="textBoxPageHeader2" StyleName="PageHeader" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="18" Color="0, 131, 215" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="19"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="20" Expression="GetData(&quot;ReportTables.ReportData.PageHeader2&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="21" value="Faster Analysis. Better Decisions." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="22" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Picture" id="23" Location="150;31.25" Size="643.75;187.5" SizeMode="Uniform" Name="logo" StyleName="PageHeader" GenerateScript="var encodedImage = GetData(&quot;ReportTables.OrganizationIcon.EncodedImage&quot;) as string;&#xD;&#xA;var bytes = Convert.FromBase64String(encodedImage);&#xD;&#xA;&#xD;&#xA;using (var memoryStream = new System.IO.MemoryStream(bytes))&#xD;&#xA;{&#xD;&#xA;  logo.Image = new System.Drawing.Bitmap(&#xD;&#xA;    System.Drawing.Image.FromStream(memoryStream));&#xD;&#xA;}" ExportAsPictureInXaml="false"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="24"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="25" Expression="GetData(&quot;ReportTables.OrganizationIcon.SupportUrl&quot;)" PropertyName="Hyperlink" /></DataBindings></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="26" Location="0;281.25" Size="3300;118.11023712158203" Name="textBoxPageHeaderLine" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="27" TopLine="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="28" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="29" Location="150;300" Size="1500;75" Name="reportTitle" StyleName="PageHeader" GenerateScript="reportTitle.Document.Title = ReportTitle;" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="30" Color="33, 64, 154" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="31"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="32" Expression="ReportTitle" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="33" value="Wind Rose" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="34" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="35" Location="150;356.25" Size="1500;56.25" Name="textBoxSubTitle" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="36" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="37"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="38" Expression="GetData(&quot;ReportTables.ReportData.ReportSubTitle&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="39" value="Title" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="40" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="41" Location="2418.75;300" Size="731.25;75" Name="textBoxPageNumber" StyleName="PageNumber" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="42" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="43"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="44" Expression="Now.ToString(&quot;MMM d, yyyy&quot;) + &quot; | &quot; + PageNumber.ToString() + &quot; &quot; + Resources.Of + &quot; &quot; + PageCount.ToString()" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="45" value="DISCLAIMER: The accuracy and reliability of this data is not guaranteed. Aquatic Informatics Inc. accepts no liability for its use in any way. It is the responsibility of the reader to establish the suitability of the information provided in this report for any purpose. No warranty expressed or implied is made regarding the accuracy, completeness, currency, relevance or suitability for any particular purpose of the information provided in this report." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="46" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="47" Location="1668.75;356.25" Size="1481.25;56.25" Name="textBoxPeriodSelected" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="48" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="49"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="50" Expression="GetData(&quot;ReportTables.ReportData.PeriodSelectedInformation&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="51" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="52" Location="0;431.25" Size="3300;150" Name="textBoxGrayBackground" StyleName="PageHeader" ExportAsPictureInXaml="false" TextAlign="TopLeft"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="53" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="55" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="56" Location="150;431.25" Size="2606.25;56.25" Name="textBox3" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="57" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="58"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="59" Expression="GetData(&quot;ReportTables.InputLocation.LocationIdentifierAndNameInformation&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="60" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="61" Location="150;468.75" Size="2606.25;56.25" Name="textBox4" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="62" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="63"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="64" Expression="GetData(&quot;ReportTables.InputLocation.LocationExtraInformation&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="65" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="66" Location="150;525" Size="2606.25;56.25" Name="textBox33" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="67" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="68"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="69" Expression="GetData(&quot;ReportTables.RatingModel.RatingModelInfo&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="70" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBand" id="71" Location="0;750" Size="3300;393.75" Name="dataBand1" ColumnsGap="0" DataSource="ReportTables.DischargeMeasurements"><Sort type="PerpetuumSoft.Reporting.DOM.DataBandSortCollection" id="72" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="73"><Item type="PerpetuumSoft.Reporting.DOM.Header" id="74" Location="0;56.25" Size="3300;168.75" Name="header1" StyleName="Header1" RepeatEveryPage="true"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="75" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="76"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="77" Location="1106.25;37.5" Size="187.5;131.25" Name="textBox14" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="78" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="79" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="81"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="82" Expression="GetData(&quot;ReportTables.ColumnHeaders.Stage&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="83" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="84" Location="1293.75;37.5" Size="187.5;131.25" Name="textBox16" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="85" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="86" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="87"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="88" Expression="GetData(&quot;ReportTables.ColumnHeaders.Discharge&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="89" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="90" Location="2737.5;37.5" Size="412.5;131.25" Margins="0; 0; 18.75; 0" Name="textBox8" StyleName="Header1" ExportAsPictureInXaml="false" TextAlign="TopLeft"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="91" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="92" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="93"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="94" Expression="GetData(&quot;ReportTables.ColumnHeaders.DischargeRemarks&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="95" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="96" Location="937.5;37.5" Size="168.75;131.25" Name="textBox17" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="97" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="98" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="99"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="100" Expression="GetData(&quot;ReportTables.ColumnHeaders.Velocity&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="101" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="102" Location="2606.25;37.5" Size="131.25;131.25" Name="textBox21" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="103" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="104" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="105"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="106" Expression="GetData(&quot;ReportTables.ColumnHeaders.DefinedShift&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="107" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="108" Location="675;37.5" Size="131.25;131.25" Name="textBox23" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="109" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="110" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="111"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="112" Expression="GetData(&quot;ReportTables.ColumnHeaders.Width&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="113" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="114" Location="806.25;37.5" Size="131.25;131.25" Name="textBox24" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="115" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="116" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="117"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="118" Expression="GetData(&quot;ReportTables.ColumnHeaders.Area&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="119" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="120" Location="1481.25;37.5" Size="168.75;131.25" Name="textBox25" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="121" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="122" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="123"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="124" Expression="GetData(&quot;ReportTables.ColumnHeaders.Method&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="125" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="126" Location="2475;37.5" Size="131.25;131.25" Name="textBox26" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="127" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="128" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="129"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="130" Expression="GetData(&quot;ReportTables.ColumnHeaders.PercentDiff&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="131" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="132" Location="2343.75;37.5" Size="131.25;131.25" Name="textBox34" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="133" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="134" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="135"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="136" Expression="GetData(&quot;ReportTables.ColumnHeaders.RatingCurveId&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="137" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="138" Location="243.75;37.5" Size="206.25;131.25" Name="textBox2" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="139" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="140" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="141"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="142" Expression="GetData(&quot;ReportTables.ColumnHeaders.DateTime&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="143" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="144" Location="2025;37.5" Size="150;131.25" Name="textBox11" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="145" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="146" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="147"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="148" Expression="GetData(&quot;ReportTables.ColumnHeaders.WaterTemp&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="149" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="150" Location="150;37.5" Size="93.75;131.25" Name="textBox1" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="151" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="152" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="153"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="154" Expression="GetData(&quot;ReportTables.ColumnHeaders.MeasurementId&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="155" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="156" Location="450;37.5" Size="225;131.25" Name="textBox13" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="157" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="158" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="159"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="160" Expression="GetData(&quot;ReportTables.ColumnHeaders.Party&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="161" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="162" Location="1650;37.5" Size="93.75;131.25" Name="textBox19" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="163" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="164" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="165"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="166" Expression="GetData(&quot;ReportTables.ColumnHeaders.NumberOfSections&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="167" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="168" Location="2268.75;37.5" Size="75;131.25" Name="textBox27" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="169" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="170" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="171"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="172" Expression="GetData(&quot;ReportTables.ColumnHeaders.QualitativeGrade&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="173" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="174" Location="1743.75;37.5" Size="150;131.25" Name="textBox36" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="175" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="176" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="177"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="178" Expression="GetData(&quot;ReportTables.ColumnHeaders.GageHeightChange&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="179" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="180" Location="1893.75;37.5" Size="131.25;131.25" Name="textBox38" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="181" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="182" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="183"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="184" Expression="GetData(&quot;ReportTables.ColumnHeaders.DurationInHours&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="185" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="186" Location="2175;37.5" Size="93.75;131.25" Name="textBox41" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="187" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="188" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="189"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="190" Expression="GetData(&quot;ReportTables.ColumnHeaders.NumberOfImages&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="191" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="192" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Detail" id="193" Location="0;281.25" CanGrow="true" Size="3300;56.25" CanShrink="true" Name="detail1"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="194" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="195"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="196" Location="1106.25;0" Size="187.5;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox7" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="197" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="198"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="199" Expression="dataBand1[&quot;MeanGageHeight&quot;] + &quot; &quot; + dataBand1[&quot;MeanGageHeightUnit&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="200" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="201" Location="1293.75;0" Size="187.5;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox10" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="202" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="203"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="204" Expression="dataBand1[&quot;Discharge&quot;] + &quot; &quot; + dataBand1[&quot;DischargeUnit&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="205" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="206" Location="2737.5;0" Size="412.5;56.25" CanShrink="true" Margins="6.25; 6.25; 18.75; 0" CanGrow="true" Name="textBox9" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="207" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="208"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="209" Expression="dataBand1[&quot;Remarks&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="210" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="211" Location="937.5;0" Size="168.75;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox18" GrowToBottom="true" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="212" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="213"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="214" Expression="dataBand1[&quot;Velocity&quot;] + &quot; &quot; + dataBand1[&quot;VelocityUnit&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="215" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="216" Location="2606.25;0" Size="131.25;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox22" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="217" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="218"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="219" Expression="dataBand1[&quot;DefinedShift&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="220" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="221" Location="2475;0" Size="131.25;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox28" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="222" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="223"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="224" Expression="dataBand1[&quot;PercentDiff&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="225" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="226" Location="1481.25;0" Size="168.75;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox29" GrowToBottom="true" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="227" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="228"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="229" Expression="dataBand1[&quot;Method&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="230" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="231" Location="806.25;0" Size="131.25;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox30" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="232" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="233"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="234" Expression="dataBand1[&quot;Area&quot;] + &quot; &quot; + dataBand1[&quot;AreaUnit&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="235" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="236" Location="675;0" Size="131.25;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox31" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="237" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="238"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="239" Expression="dataBand1[&quot;Width&quot;] + &quot; &quot; + dataBand1[&quot;WidthUnit&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="240" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="241" Location="2343.75;0" Size="131.25;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox35" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="242" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="243"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="244" Expression="dataBand1[&quot;RatingCurveId&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="245" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="246" Location="243.75;0" Size="206.25;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox6" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="247" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="248"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="249" Expression="dataBand1[&quot;DateTime&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="250" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="251" Location="2025;0" Size="150;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox12" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="252" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="253"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="254" Expression="dataBand1[&quot;WaterTemp&quot;] + &quot; &quot; + dataBand1[&quot;WaterTempUnit&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="255" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="256" Location="150;0" Size="93.75;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox5" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="257" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="258"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="259" Expression="dataBand1[&quot;MeasurementId&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="260" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="261" Location="450;0" Size="225;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox15" GrowToBottom="true" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="262" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="263"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="264" Expression="dataBand1[&quot;Party&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="265" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="266" Location="1650;0" Size="93.75;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox20" GrowToBottom="true" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="267" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="268"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="269" Expression="dataBand1[&quot;NumberOfSections&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="270" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="271" Location="2268.75;0" Size="75;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox32" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="272" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="273"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="274" Expression="dataBand1[&quot;QualitativeGrade&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="275" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="276" Location="1743.75;0" Size="150;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox37" GrowToBottom="true" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="277" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="278"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="279" Expression="dataBand1[&quot;GageHeightChange&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="280" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="281" Location="1893.75;0" Size="131.25;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox39" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="282" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="283"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="284" Expression="dataBand1[&quot;DurationInHours&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="285" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="286" Location="2175;0" Size="93.75;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox40" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="287" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="288"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="289" Expression="dataBand1[&quot;NumberOfImages&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="290" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="291" /></Item></Controls><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="292" /><Totals type="PerpetuumSoft.Reporting.DOM.DataBandTotalCollection" id="293" /><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="294" /></Item><Item type="PerpetuumSoft.Reporting.DOM.PageFooter" id="295" StyleName="PageFooter" Location="0;1200" Name="pageFooter" Size="3300;150"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="296" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="297"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="298" Location="0;0" Size="3300;29.528125762939453" Name="textBoxPageFooterLine" ExportAsPictureInXaml="false"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="299" Color="110, 112, 110" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="27" TopLine="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="300" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="301" Location="168.75;0" Size="2981.25;131.25" CanGrow="true" Name="textBoxPageFooter1" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="BottomLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="302" Color="110, 112, 110" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="303"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="304" Expression="GetData(&quot;ReportTables.ReportData.FooterDisclaimer&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="305" value="DISCLAIMER - AQUARIUS is the leading software suite to acquire, process, model, and publish water data. Environmental monitoring agencies worldwide trust AQUARIUS to produce accurate water information in real-time. A modern design delivers the latest water science in an intuitive experience." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="306" Size="7" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls></Item></Controls></Item></Pages><DataSources type="PerpetuumSoft.Reporting.Data.DocumentDataSourceCollection" id="307" /><StyleSheet type="PerpetuumSoft.Reporting.DOM.StyleSheet" id="308"><Styles type="PerpetuumSoft.Reporting.DOM.StyleCollection" id="309"><Item type="PerpetuumSoft.Reporting.DOM.Style" id="310" Name="HeaderFooter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="311" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="312" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="313" Name="HeaderFooter1"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="314" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="315" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="316" Name="HeaderFooter2"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="317" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="318" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="319" Name="HeaderFooter3"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="320" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="321" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="322" Name="Even"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="323" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="324" Size="9" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="325" Name="Odd"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="326" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="327" Size="9" FamilyName="Calibri" /><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="328" Color="Silver" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="329" Name="Normal"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="330" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="331" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="332" Name="TableHeader"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="333" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="334" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="335" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="336" Name="TableCell"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="337" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="338" Size="8" FamilyName="Calibri" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="80" All="1 Solid Silver" /></Item></Styles></StyleSheet></root>